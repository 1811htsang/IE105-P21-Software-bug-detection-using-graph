original bitcode :
Call graph node <<null function>><<0x5614dd3a1880>>  #uses=0
  CS<None> calls function 'main'
  CS<None> calls function 'scope1'
  CS<None> calls function 'scope2'
  CS<None> calls function 'scope3'
  CS<None> calls function 'scope4'
  CS<None> calls function 'scope5'
  CS<None> calls function 'scope6'
  CS<None> calls function 'B'
  CS<None> calls function 'D'
  CS<None> calls function 'printf'
  CS<None> calls function 'A'
  CS<None> calls function 'C'

Call graph node for function: 'A'<<0x5614dd39c500>>  #uses=5
  CS<0x5614dd3ae1a0> calls function 'printf'

Call graph node for function: 'B'<<0x5614dd39c580>>  #uses=6
  CS<0x5614dd3add60> calls function 'printf'

Call graph node for function: 'C'<<0x5614dd39c600>>  #uses=3
  CS<0x5614dd3ae3c0> calls function 'printf'

Call graph node for function: 'D'<<0x5614dd39c680>>  #uses=6
  CS<0x5614dd3adf80> calls function 'printf'

Call graph node for function: 'main'<<0x5614dd3a1940>>  #uses=1
  CS<0x5614dd3ac0c0> calls function 'scope1'
  CS<0x5614dd3ac170> calls function 'scope2'
  CS<0x5614dd3ac220> calls function 'scope3'
  CS<0x5614dd3ac2d0> calls function 'scope4'
  CS<0x5614dd3ac380> calls function 'scope5'
  CS<0x5614dd3ac430> calls function 'scope6'

Call graph node for function: 'printf'<<0x5614dd39d850>>  #uses=5
  CS<None> calls external node

Call graph node for function: 'scope1'<<0x5614dd3a3f00>>  #uses=3
  CS<0x5614dd3aca00> calls function 'A'
  CS<0x5614dd3acab0> calls function 'B'
  CS<0x5614dd3acb60> calls function 'C'
  CS<0x5614dd3acc10> calls function 'D'

Call graph node for function: 'scope2'<<0x5614dd3a3fb0>>  #uses=2
  CS<0x5614dd3ace10> calls function 'A'
  CS<0x5614dd3acec0> calls function 'C'
  CS<0x5614dd3acf70> calls function 'D'

Call graph node for function: 'scope3'<<0x5614dd3a4030>>  #uses=2
  CS<0x5614dd3ad170> calls function 'A'
  CS<0x5614dd3ad220> calls function 'B'

Call graph node for function: 'scope4'<<0x5614dd3a40b0>>  #uses=2
  CS<0x5614dd3ad3d0> calls function 'B'
  CS<0x5614dd3ad480> calls function 'D'
  CS<0x5614dd3ad530> calls function 'scope1'

Call graph node for function: 'scope5'<<0x5614dd3a4130>>  #uses=2
  CS<0x5614dd3ad730> calls function 'B'
  CS<0x5614dd3ad7e0> calls function 'D'
  CS<0x5614dd3ad890> calls function 'A'

Call graph node for function: 'scope6'<<0x5614dd39c480>>  #uses=2
  CS<0x5614dd3ada90> calls function 'B'
  CS<0x5614dd3adb40> calls function 'D'

function map :
0 => A
1 => printf
2 => B
3 => C
4 => D
5 => main
6 => scope1
7 => scope2
8 => scope3
9 => scope4
10 => scope5
11 => scope6

Call functions :
0 calls: 1 
2 calls: 1 
3 calls: 1 
4 calls: 1 
5 calls: 6 7 8 9 10 11 
6 calls: 0 2 3 4 
7 calls: 0 3 4 
8 calls: 0 2 
9 calls: 2 4 6 
10 calls: 2 4 0 
11 calls: 2 4 

IPC Call functions :
0 calls: 1 
2 calls: 1 
3 calls: 1 
4 calls: 1 
5 calls: 6 7 8 9 10 11 
6 calls: 0 2 3 4 
7 calls: 0 3 4 
8 calls: 0 2 
9 calls: 2 4 6 
10 calls: 2 4 0 
11 calls: 2 4 
Learned Constraints :
pair: (A B), support: 3, confidence: 75.00%
pair: (A D), support: 3, confidence: 75.00%
pair: (B D), support: 4, confidence: 80.00%
pair: (D B), support: 4, confidence: 80.00%
bug: A in scope2 pair: (A B) support: 3 confidence: 75.00%
bug: D in scope2 pair: (B D) support: 4 confidence: 80.00%
bug: A in scope3 pair: (A D) support: 3 confidence: 75.00%
bug: B in scope3 pair: (B D) support: 4 confidence: 80.00%
